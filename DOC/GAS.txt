GNU Assembler Oddities
----------------------


kernel.s: Error: attempt to get value of unresolved symbol `L0'


	.data
	1: .asciz "foo"
	2: 
	.text
	mov	eax, offset 2b - offset 1b



Error: too many memory references for ''mov'' (on a macro line)

[!generally: macro references a macro argument without \]


kernel.s: Fatal error: Case value 61 unexpected at line 1152 of file "/netrel/src/binutils-2.22.51-2/gas/symbols.c"


	using 'offset' keyword in .data:

	.data
	fs_root_instance: .long offset fs_root_class

	=>

	fs_root_instance: .long fs_root_class




kernel.s: Error: end of file inside conditional
schedule.s:164: Error: here is the start of the unterminated conditional

		.if FOO
			jz	1f
	1:	.endif


[!The .endif is not parsed!]


Runtime errors
--------------

	mov	al, [16]
	mov	al, byte [16]
	mov	al, byte ptr [16]


	0:   a0 10 00 00 00          mov    al, [0x10]
	5:   a0 11 00 00 00          mov    al, [0x11]	!!!!
	a:   a0 10 00 00 00          mov    al, [0x10]


GAS 2.23 vs 2.22
----------------
2.23 has .previous.
2.23 treats .global differently:
	
> cat test.s

	.intel_syntax noprefix
	.text
	.code32
	.global foo
	foo:	ret
	bar:	call foo


> as --32 test.s && objdump -d a.out

	a.out:     file format elf32-i386

	Disassembly of section .text:

	00000000 <foo>:
	   0:	c3                   	ret    

	00000001 <bar>:
	   1:	e8 fc ff ff ff       	call   2 <bar+0x1>


Without the '.global':

	a.out:     file format elf32-i386

	Disassembly of section .text:

	00000000 <foo>:
	   0:	c3                   	ret    

	00000001 <bar>:
	   1:	e8 fa ff ff ff       	call   0 <foo>
